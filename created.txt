The following folders are assumed as available for use:
d:\Projects\VSrepository
d:\ProgramFiles
d:\ProgramData

We assume microsoft Edge and having javascript and flash enabled as I had problems with chrome in the VS2018 environment.

Download and install VS2017
	read this first:  https://www.visualstudio.com/vs/support/need-installing-visual-studio/
	read this next: https://docs.microsoft.com/en-us/visualstudio/install/modify-visual-studio
	this one also:  https://docs.microsoft.com/en-us/visualstudio/install/install-visual-studio
	go here:  https://www.visualstudio.com/downloads/ and select the free Community
	Install into default location unless you have a small SSD "C" drive like me
		then create and use D:\ProgramFiles and install into that folder
	Make sure you get web components and configure for C# and web development

Download and install GIT	
	Go here:  https://git-scm.com/downloads
	and select and install the windows version into D:ProgramFiles
	select mingw64 even if no plans to use it
	select nano for editor DO NOT SELECT VISUAL STUDIO CODE EDITOR - YOU WILL BE SORRY!
	make sure you select bash as that will be used
	after install, pin the Git "Git Bash" from the windows startup to your desktop and
		then make sure its properties are as follows:
		Target: D:\ProgramFiles\Git\git-bash.exe
		Start in: d:\projects\VSrepository

Create Git Account and repository
	browse to github and register.  Click on + and get a folder at
		https://github.com/UserName
		then create a new repository named: MyGitTest
		make it public, put in a description and a Readme.md
		click on "Create Repository"
		we will be doing the http type install


Using VS2017 ....
Create repository "MyGitTest" somewhere, suggest in "D:\projects\VSrepository"
Create empty solution in that repository:  MyTwoTests
At "MyTwoTests" in Solution Explorer add project using Console App (.NET Framework) named "ConsoleApp1"
Add "Hello World" in program.cs as shown below here
namespace ConsoleApp1
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Hello World");
	    Console.ReadLine();
        }
    }
}


Click on "Save All"

At "MyTwoTest" in Solution Explorer add 
	using "Web - ASP.NET Web Application (.NET Framework)" named "WebApplication1" and click "OK"
	after the OK, select "Empty", put an X in the checkbox "[]Web Forms" and click "OK"

At "WebApplication1" in Solution Explorer, add "New Item", scroll down to "Web Form" and
	change the name from "WebForm1.aspx" to "Default.aspx" then click "ADD"
	Select "Default.aspx" in Solution Explorer, ensure that "Design" is selected and
	position your cursor in the colored horizontal outlined box at the top of the frame.
	Add the phrase "Hello World" in that colored line just below "div" in that same 
Click on "Save All" and select "Build Solution".  There should be two successes.


In the Solution Explorer, right click on WebApplication1, select "Debug" then click on "Start New Instance"  
	the program will run.  Stop the program by first selecting (up at top of VS2017) the DEBUG - STOP DEBUGGING
	then close the windows that shows "hello world"

Repeat for the ConsoleApp1 program.  To stop that program click on the console window and press the return key.
	
To publish your WebApplication1 on the internet
	log onto godaddy's Flesk Admin 	click on Web Deploy Publishing and save the "settings file" in documents
	In VS2017 Solution Explorer, right click on WebApplication1 and select "Publish" = "START" - "IIs"
		import that profile "settings file" and if asked for password, click "cancel"
		select "Settings" and change your Web Deploy to show the following
			Server:  YourGoDaddyHostName
			SiteName:  YourGoDaddyHostName/WebApplication1
			Destination URL: YourGoDaddyHostName/WebApplication1
			leave password empty as github is public.  The password is encrypted but anyone could build your
				program, change it, and publish a log of c--p on your site.

You should be online and logged into your github under your UserName and MyGitTest showing instructions similar to the following.
Find your "Git Bash" on the desktop and click on it.
	navigate to d:\Projects\VSrepository\MyGetTest and do the following
git init
echo "# MyGitTest" >> README.md
git remote add origin https://github.com/BeemerBiker/MyGitTest.git
git add .
git commit -m "first commit"
git push origin master

If the text "created.txt" was changed locally then to update it
git add -A
git status
git commit -m "updated created.txt"
git push --all


------------below used to update spider--------
git reset --mixed origin/master
git add .
git commit -m "This is a new commit for what I originally planned to be an amendmend"
git push origin master